int findCircleNum(vector<vector<int>>& isConnected) {
        
        int n=isConnected.size();
        
        vector<int> adj[n+1];
        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                if(i!=j && isConnected[i][j]==1){
                    adj[i+1].push_back(j+1);
                }
            }
        }
        
        int cnt=0;
        vector<int> vis(n+1,0);
        for(int i=1;i<=n;i++){
            if(!vis[i]){
                cnt++;
                dfs(i,adj,vis);
            }
        }
        return cnt;
    }
    
    void dfs(int i,vector<int> adj[],vector<int> &vis){
        vis[i]=1;
        for(int j:adj[i]){
            if(!vis[j]){
                dfs(j,adj,vis);
            }
        }
    }
